unit TestAdapterUIB;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Core.Interfaces, UIB, SQL.AnsiSQLGenerator, Generics.Collections, DB,
  Core.Base, Adapters.UIB, uibdataset, SQL.Params, SysUtils;

type
  // Test methods for class TUIBResultSetAdapter

  TestTUIBResultSetAdapter = class(TTestCase)
  private
    FDataset: TUIBDataSet;
    FTransaction: TUIBTransaction;
    FUIBResultSetAdapter: TUIBResultSetAdapter;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestIsEmpty;
    procedure TestNext;
    procedure TestGetFieldValue;
    procedure TestGetFieldValue1;
    procedure TestGetFieldCount;
  end;

implementation

var
  TestDB: TUIBDataBase = nil;

procedure TestTUIBResultSetAdapter.SetUp;
begin
  FTransaction := TUIBTransaction.Create(nil);
  FTransaction.DataBase := TestDB;
  FDataset := TUIBDataSet.Create(nil);
  FDataset.Database := TestDB;
  FDataset.Transaction := FTransaction;
  FDataset.SQL.Text := 'select * from IMONES;';
  FDataset.Open;
  FUIBResultSetAdapter := TUIBResultSetAdapter.Create(FDataset);
end;

procedure TestTUIBResultSetAdapter.TearDown;
begin
  FTransaction.Free;
  FUIBResultSetAdapter.Free;
  FUIBResultSetAdapter := nil;
end;

procedure TestTUIBResultSetAdapter.TestIsEmpty;
var
  ReturnValue: Boolean;
begin
  ReturnValue := FUIBResultSetAdapter.IsEmpty;
  CheckFalse(ReturnValue);
end;

procedure TestTUIBResultSetAdapter.TestNext;
var
  ReturnValue: Boolean;
begin
  ReturnValue := FUIBResultSetAdapter.Next;
  CheckTrue(ReturnValue);
end;

procedure TestTUIBResultSetAdapter.TestGetFieldValue;
var
  ReturnValue: Variant;
begin
  ReturnValue := FUIBResultSetAdapter.GetFieldValue(0);
  CheckEquals(2, Integer(ReturnValue));
end;

procedure TestTUIBResultSetAdapter.TestGetFieldValue1;
var
  ReturnValue: Variant;
begin
  ReturnValue := FUIBResultSetAdapter.GetFieldValue('IMONESID');
  CheckEquals(2, Integer(ReturnValue));
end;

procedure TestTUIBResultSetAdapter.TestGetFieldCount;
var
  ReturnValue: Integer;
begin
  ReturnValue := FUIBResultSetAdapter.GetFieldCount;
  CheckTrue(ReturnValue > 100);
end;

initialization
  TestDB := TUIBDataBase.Create(nil);
  // Register any test cases with the test runner
  if FileExists('D:\DB\GDB\CAA\ALGA.GDB') then
  begin
    RegisterTest(TestTUIBResultSetAdapter.Suite);
    TestDB.UserName := 'SYSDBA';
    TestDB.PassWord := 'masterkey';
    TestDB.DatabaseName := 'localhost:D:\DB\GDB\CAA\ALGA.GDB';
    TestDB.Connected := True;
  end;

finalization
  TestDB.Free;

end.

